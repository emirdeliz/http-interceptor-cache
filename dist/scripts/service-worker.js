(()=>{const e="http-interceptor-cache-extension-enabled";function n(e,n){const{channel:a,key:r,value:c}=e;try{switch(a){case"http-interceptor-get-state":t({key:r,channel:a,callback:n});break;case"http-interceptor-update-state":!function({key:e,value:n,channel:t,callback:a}){chrome.storage.local.set({[e]:n},(function(){a&&a({value:n,channel:t})})),chrome.runtime.lastError&&console.warn(`Error setting ${e} to ${n}: ${chrome.runtime.lastError.message}`)}({key:r,channel:a,value:c,callback:n})}}catch(e){console.warn({e:e})}return!0}function t({key:e,channel:n,callback:t}){return chrome.storage.local.get(e||null,(function(e){t&&t({...e,channel:n})})),chrome.runtime.lastError&&console.warn(`Error setting ${e} to ${e}: ${chrome.runtime.lastError.message}`),!0}function a({enabled:e}){return chrome.action.setIcon({path:e?"../../images/icon-16.png":"../../images/icon-16-disabled.png"}),chrome.action.setBadgeText({text:e?"":"Off"}),!0}chrome.tabs.onUpdated.addListener((()=>{t({key:e,callback:function(n){a({enabled:n[e]})}})})),chrome.runtime.onMessage.addListener((function(e,t,a){return n(e,a)})),chrome.storage.onChanged.addListener((function(n,t){for(let[t,{newValue:r}]of Object.entries(n)){e===t&&a({enabled:r})}}))})();